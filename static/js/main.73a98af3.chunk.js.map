{"version":3,"sources":["weather/index.js","App.js","index.js"],"names":["api","Index","useState","query","setQuery","weather","setWeather","time","setTime","setInterval","newtime","Date","toLocaleTimeString","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Math","round","temp_min","temp_max","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAGMA,EACE,mCADFA,EAEG,2CAGM,SAASC,IAAS,IAAD,EAEPC,mBAAS,IAFF,mBAEvBC,EAFuB,KAEjBC,EAFiB,OAGHF,mBAAS,IAHN,mBAGvBG,EAHuB,KAGfC,EAHe,OAoBTJ,mBAAS,MApBA,mBAoBvBK,EApBuB,KAoBlBC,EApBkB,KA2B5BC,aALA,WACI,IACIC,GADE,IAAIC,MACIC,mBAAmB,SACjCJ,EAAQE,KAEQ,KAgBpB,OACI,qBAAKG,UAAkC,oBAAfR,EAAQS,MAC9BT,EAAQS,KAAKC,KAAK,GAAO,WAAmB,MAD9C,SAGI,iCACI,qBAAKF,UAAU,aAAf,SACE,uBACCG,KAAK,OACLH,UAAU,aACVI,YAAY,kBACZC,SAAU,SAAAC,GAAC,OAAEf,EAASe,EAAEC,OAAOC,QAC/BA,MAAOlB,EACPmB,WAlDJ,SAAAC,GACI,UAAVA,EAAIC,KACHC,MAAM,GAAD,OAAIzB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACzD0B,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACFvB,EAAWuB,GACXC,QAAQC,IAAIF,GACZzB,EAAS,YA8CiB,oBAAfC,EAAQS,KACjB,gCACI,sBAAKD,UAAU,eAAf,UACD,sBAAKA,UAAU,WAAf,UAA2BR,EAAQ2B,KAAnC,KAA2C3B,EAAQ4B,IAAIC,WACvD,qBAAKrB,UAAU,OAAf,SAjCD,SAACsB,GACf,IAKIC,EAHK,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAC7D,YAEaD,EAAEE,UACXC,EAAKH,EAAEI,UACPC,EAPO,CAAC,UAAU,WAAW,QAAQ,QAAQ,MAAM,OAAO,OAC9D,SAAS,YAAY,UAAU,WAAW,YAMzBL,EAAEM,YACfC,EAAKP,EAAEQ,cAEX,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAsBIE,CAAY,IAAIjC,WAE1C,sBAAKE,UAAU,cAAf,UACI,sBAAKA,UAAU,OAAf,UACKgC,KAAKC,MAAMzC,EAAQS,KAAKC,MAD7B,WAGA,sBAAKF,UAAU,aAAf,kBAAkCgC,KAAKC,MAAMzC,EAAQS,KAAKiC,UAA1D,iBAAgFF,KAAKC,MAAMzC,EAAQS,KAAKkC,UAAxG,WACA,qBAAKnC,UAAU,UAAf,SAA0BR,EAAQA,QAAQ,GAAGS,OAC7C,qBAAKD,UAAU,OAAf,SAAuBN,OAG3B,mBAAG0C,KAAK,wDAAwDpC,UAAU,UAA1E,+DAA2G,uBAC3G,mBAAGoC,KAAK,8BAA8BpC,UAAU,MAAhD,uCAEI,QCvELqC,MATf,WAEE,OACE,mCACC,cAAC,EAAD,OCFLC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.73a98af3.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport './index.css';\n\nconst api={\n    key:\"c72f8345850369ff6163952be1550e6e\",\n    base:\"https://api.openweathermap.org/data/2.5/\"\n}\n\nexport default function Index() {\n\n  const [query,setQuery]=useState('');\n  const [weather,setWeather]=useState({});\n\n  const search=evt=>{\n      if(evt.key===\"Enter\"){\n          fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n          .then(res=>res.json())\n          .then(result=>{\n              setWeather(result)\n              console.log(result);\n              setQuery('');\n          });\n      }\n  }\n     \n\n\n\n    let [time,setTime]=useState(null);\n\n    function Timeset(){\n        let d=new Date();\n        let newtime=d.toLocaleTimeString('en-US');\n        setTime(newtime);\n    }\n    setInterval(Timeset,1000);\n\nconst dateBuilder=(d)=>{\n    let months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\n    \"August\",\"September\",\"October\",\"November\",\"December\"];\n    let days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"friday\",\n    \"Saturday\"]\n\n    let day=days[d.getDay()];\n    let date=d.getDate();\n    let month=months[d.getMonth()];\n    let year=d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n} \n\n    return (\n        <div className={(typeof weather.main !=\"undefined\") ?\n        ((weather.main.temp>16)) ? 'app warm' : 'app':'app'}> \n        {/* <h1 style={{color:\"white\"}}>Weather App</h1> */}\n            <main>\n                <div className=\"search-box\">\n                  <input\n                   type=\"text\"\n                   className=\"search-bar\"\n                   placeholder=\"Search city....\"\n                   onChange={e=>setQuery(e.target.value)}\n                   value={query}\n                   onKeyPress={search}\n                   />\n                </div>\n                {(typeof weather.main !=\"undefined\")?(\n                <div>\n                    <div className=\"location-bax\">\n                   <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n                   <div className=\"date\">{dateBuilder(new Date())}</div>\n                </div>\n                <div className=\"weather-box\">\n                    <div className=\"temp\">\n                        {Math.round(weather.main.temp)}°c\n                    </div>\n                    <div className=\"minmaxtemp\">Min: {Math.round(weather.main.temp_min)}°c || Max: {Math.round(weather.main.temp_max)}°c</div>\n                    <div className=\"weather\">{weather.weather[0].main}</div>\n                    <div className=\"time\">{time}</div>\n                    {/* <div className=\"creater\">@ramnayan699</div> */}\n                </div>\n                <a href=\"https://www.linkedin.com/in/ramnayan-yadav-33371b165/\" className=\"creater\">@ramnayan699 🕵️‍♂️</a><br/>\n                <a href=\"https://github.com/Ram-1234\" className=\"git\">@ram-1234 🐈</a>\n                </div>\n                ): ('')}\n            </main>\n        </div>\n    );\n}\n","import React from 'react';\n//import CityInput from \"./components/index\";\nimport Weather from './weather/index';\n\nfunction App() {\n  \n  return (\n    <>\n     <Weather />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}